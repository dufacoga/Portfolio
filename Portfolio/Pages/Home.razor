@page "/"
@using Portfolio.Model
@inject HttpClient Http

<div class="home">
	<div class="container">
		<div class="column1">
			<div class="row">
				<Card GroupClass="headercard">
					<Header />
				</Card>
			</div>
			<div class="row">
				<Card GroupClass="profilecard">
					<Profile Title="John Doe" Subtitle="Sr. Software Engineer | Distributed Systems Specialist | Node.js, Microservices Architecture" ImageUrl="images/profile.jpg" ResumeUrl="https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf" />
				</Card>
			</div>
			<div class="row">
				<Card GroupClass="contactcard">
					<Contact>
						<InfoContact Title="Based in:" Subtitle="USA" GroupClass="fas fa-map-marker-alt" SubtitleUrl="" SubtitleUrltarget="_self" />
					</Contact>
					<Contact>
						<InfoContact Title="GitHub:" Subtitle="johndoe" GroupClass="fab fa-github" SubtitleUrl="" SubtitleUrltarget="_blank" />
					</Contact>
					<Contact>
						<InfoContact Title="LinkedIn:" Subtitle="johndoe" GroupClass="fab fa-linkedin" SubtitleUrl="" SubtitleUrltarget="_blank" />
					</Contact>
					<Contact>
						<InfoContact Title="Website:" Subtitle="johndoe.com" GroupClass="fas fa-globe" SubtitleUrl="" SubtitleUrltarget="_blank" />
					</Contact>
					<Contact>
						<InfoContact Title="Email:" Subtitle="johndoe@johndoe.com" GroupClass="fas fa-envelope" SubtitleUrl="" SubtitleUrltarget="_self" />
					</Contact>
					<Contact>
						<InfoContact Title="Cellphone:" Subtitle="+1 901 354 1894" GroupClass="fas fa-mobile-alt" SubtitleUrl="" SubtitleUrltarget="_self" />
					</Contact>
				</Card>
			</div>
			<div class="row">
				<Card GroupClass="skillscard">
					<GeneralInfoCard Title="Tech Stack" GroupClass="skills">
						<InfoSkill Text="PHP" />
						<InfoSkill Text="Laravel" />
						<InfoSkill Text="JavaScript" />
						<InfoSkill Text="React.js" />
						<InfoSkill Text="Node.js" />
						<InfoSkill Text="Nest.js" />
						<InfoSkill Text="MySql" />
						<InfoSkill Text="PostgreSQL" />
						<InfoSkill Text="Git" />
						<InfoSkill Text="Docker" />
						<InfoSkill Text="PHUnit" />
						<InfoSkill Text="CSS" />
						<InfoSkill Text="Antd" />
						<InfoSkill Text="Tailwind" />
					</GeneralInfoCard>
				</Card>
			</div>
			<div class="row">
				<Card GroupClass="experiencecard">
					<GeneralInfoCard Title="Experience" GroupClass="experience">
						<InfoGeneral Date="September 2021 - Present" Title="Position" Description="Company Name" />
						<InfoGeneral Date="July 2019 - August 2021" Title="Position" Description="Company Name" />
					</GeneralInfoCard>
				</Card>
			</div>
			<div class="row">
				<Card GroupClass="certificationcard">
					<GeneralInfoCard Title="Certification" GroupClass="certification">
						<InfoGeneral Date="March 2022" Title="Lorem ipsum" Description="Lorem ipsum dolor sit amet" />
					</GeneralInfoCard>
				</Card>
			</div>
			<div class="row">
				<Card GroupClass="educationcard">
					<GeneralInfoCard Title="Education" GroupClass="education">
						<InfoGeneral Date="2015 - 2019" Title="Degree" Description="Institution Name" />
						<InfoGeneral Date="2012 - 2014" Title="Degree" Description="Institution Name" />
					</GeneralInfoCard>
				</Card>
			</div>
		</div>
		<div class="column2">
			<div class="row">
				<GroupCard Title="Github Projects" Link="See All" LinkHref="https://github.com/dufacoga?tab=repositories" GroupClass="githubprojects">
					@if (repos is null)
					{
						<p>Loading...</p>
					}
					else if (!repos.Any())
					{
						<p>No GitHub projects found.</p>
					}
					else
					{
						@foreach (var repo in repos.Take(8))
						{
							<Card GroupClass="githubproject" Urlcard="@repo.Html_Url">
								<InfoGithubProject Name="@repo.Name"
												   Description="@repo.Description"
												   Stars="@repo.Stargazers_Count"
												   Forks="@repo.Forks_Count"
												   Language="@repo.Language" />
							</Card>
						}

						@for (int i = repos.Count; i < 8; i++)
						{
							<Card GroupClass="githubproject clone">
								<InfoGithubProject Name="@repos[0].Name"
												   Description="@repos[0].Description"
												   Stars="@repos[0].Stargazers_Count"
												   Forks="@repos[0].Forks_Count"
												   Language="@repos[0].Language" />
							</Card>
						}
					}
				</GroupCard>
			</div>
			<div class="row">
				<GroupCard Title="Publications" Link="" LinkHref="" GroupClass="publications">
					<Card GroupClass="publication" Urlcard="">
						<InfoPublication Title="Publication Title"
										 Origin="Journal Name"
										 Author="Author: John Doe, Jane Smith"
										 Description="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum." />
					</Card>
					<Card GroupClass="publication" Urlcard="">
						<InfoPublication Title="Publication Title"
										 Origin="Journal Name"
										 Author="Author: John Doe, Jane Smith"
										 Description="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum." />
					</Card>
				</GroupCard>
			</div>
			<div class="row">
				<GroupCard Title="My Projects" Link="" LinkHref="" GroupClass="myprojects">
					<Card GroupClass="project" Urlcard="">
						<InfoMyProject Title="Project Name"
									   ImageUrl="images/illustration-gallery-icon.png"
									   Description="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed euismod, nunc ut." />
					</Card>
					<Card GroupClass="project" Urlcard="">
						<InfoMyProject Title="Project Name"
									   ImageUrl="images/illustration-gallery-icon.png"
									   Description="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed euismod, nunc ut." />
					</Card>
				</GroupCard>
			</div>
			<div class="row">
				<GroupCard Title="My Articles" Link="" LinkHref="" GroupClass="myarticles">
					<Card GroupClass="article" Urlcard="">
						<InfoMyArticle Title="Prevent API Overload: A Comprehensive Guide to Rate Limiting with Bottleneck"
									   Time="about 1 year ago"
									   ImageUrl="images/amazonawsarticles.png"
									   Description="In the realm of modern web development, APIs have become the lifeblood of our applications. They…">
							<InfoHashtag Text="#api" />
							<InfoHashtag Text="#backend" />
							<InfoHashtag Text="#javascript" />
							<InfoHashtag Text="#tutorial" />
						</InfoMyArticle>
					</Card>
					<Card GroupClass="article" Urlcard="">
						<InfoMyArticle Title="Prevent API Overload: A Comprehensive Guide to Rate Limiting with Bottleneck"
									   Time="about 1 year ago"
									   ImageUrl="images/amazonawsarticles.png"
									   Description="In the realm of modern web development, APIs have become the lifeblood of our applications. They…">
							<InfoHashtag Text="#api" />
							<InfoHashtag Text="#backend" />
							<InfoHashtag Text="#javascript" />
							<InfoHashtag Text="#tutorial" />
						</InfoMyArticle>
					</Card>
				</GroupCard>
			</div>
		</div>
	</div>
	<div class="footer">
		<Card GroupClass="footercard" Urlcard="">
			<span>Design inspired by <i class="fab fa-github"></i>Arifszn.</span>
		</Card>
	</div>
</div>

@code {
	private List<Model.GitHubProject> repos;

	protected override async Task OnInitializedAsync()
	{
		var username = "dufacoga";
		var url = $"https://api.github.com/users/{username}/repos";

		var request = new HttpRequestMessage(HttpMethod.Get, url);
		request.Headers.UserAgent.ParseAdd("PortfolioApp");

		var response = await Http.SendAsync(request);
		if (response.IsSuccessStatusCode)
		{
			var json = await response.Content.ReadAsStringAsync();
			repos = System.Text.Json.JsonSerializer.Deserialize<List<Model.GitHubProject>>(json,
				new System.Text.Json.JsonSerializerOptions { PropertyNameCaseInsensitive = true });
		}
	}
}